[
  {
    "Name": "psexec_command.rb",
    "Title": "Microsoft Windows Authenticated Administration Utility",
    "Description": "This module uses a valid administrator username and password to execute an arbitrary command on one or more hosts, using a similar technique than the \"psexec\" utility provided by SysInternals. Daisy chaining commands with '&' does not work and users shouldn't try it. This module is useful because it doesn't need to upload any binaries to the target machine.",
    "CveIDs": [
      "CVE-1999-0504"
    ],
    "References": [
      "https://www.optiv.com/blog/owning-computers-without-shell-access",
      "http://sourceforge.net/projects/smbexec/",
      "http://technet.microsoft.com/en-us/sysinternals/bb897553.aspx"
    ]
  },
  {
    "Name": "psexec_loggedin_users.rb",
    "Title": "Microsoft Windows Authenticated Logged In Users Enumeration",
    "CveIDs": [
      "CVE-1999-0504"
    ],
    "References": [
      "http://www.pentestgeek.com/2012/11/05/finding-logged-in-users-metasploit-module/",
      "http://technet.microsoft.com/en-us/sysinternals/bb897553.aspx"
    ]
  },
  {
    "Name": "current_user_psexec.rb",
    "Title": "PsExec via Current User Token",
    "Description": "This module uploads an executable file to the victim system, creates a share containing that executable, creates a remote service on each target system using a UNC path to that file, and finally starts the service(s).  The result is similar to psexec but with the added benefit of using the session's current authentication token instead of having to know a password or hash.",
    "CveIDs": [
      "CVE-1999-0504"
    ],
    "References": [
      "http://technet.microsoft.com/en-us/sysinternals/bb897553.aspx"
    ]
  },
  {
    "Name": "powershell_remoting.rb",
    "Title": "Powershell Remoting Remote Command Execution",
    "Description": "This module uses Powershell Remoting (TCP 47001) to inject payloads on target machines. If RHOSTS are specified, it will try to resolve the IPs to hostnames, otherwise use a HOSTFILE to supply a list of known hostnames.",
    "CveIDs": [
      "CVE-1999-0504"
    ]
  },
  {
    "Name": "wmi.rb",
    "Title": "Windows Management Instrumentation (WMI) Remote Command Execution",
    "Description": "This module executes powershell on the remote host using the current user credentials or those supplied. Instead of using PSEXEC over TCP port 445 we use the WMIC command to start a Remote Procedure Call on TCP port 135 and an ephemeral port. Set ReverseListenerComm to tunnel traffic through that session.  The result is similar to psexec but with the added benefit of using the session's current authentication token instead of having to know a password or hash.  The remote host must be configured to allow remote Windows Management Instrumentation.",
    "CveIDs": [
      "CVE-1999-0504"
    ],
    "References": [
      "http://passing-the-hash.blogspot.co.uk/2013/07/WMIS-PowerSploit-Shells.html"
    ]
  },
  {
    "Name": "psexec.rb",
    "Title": "Microsoft Windows Authenticated User Code Execution",
    "Description": "This module uses a valid administrator username and password (or password hash) to execute an arbitrary payload. This module is similar to the \"psexec\" utility provided by SysInternals. This module is now able to clean up after itself. The service created by this tool uses a randomly chosen name and description.",
    "CveIDs": [
      "CVE-1999-0504"
    ],
    "References": [
      "http://technet.microsoft.com/en-us/sysinternals/bb897553.aspx",
      "https://www.optiv.com/blog/owning-computers-without-shell-access",
      "http://sourceforge.net/projects/smbexec/"
    ]
  },
  {
    "Name": "psexec_psh.rb",
    "Title": "Microsoft Windows Authenticated Powershell Command Execution",
    "Description": "This module uses a valid administrator username and password to execute a powershell payload using a similar technique to the \"psexec\" utility provided by SysInternals. The payload is encoded in base64 and executed from the commandline using the -encodedcommand flag. Using this method, the payload is never written to disk, and given that each payload is unique, is less prone to signature based detection. A persist option is provided to execute the payload in a while loop in order to maintain a form of persistence. In the event of a sandbox observing PSH execution, a delay and other obfuscation may be added to avoid detection. In order to avoid interactive process notifications for the current user, the psh payload has been reduced in size and wrapped in a powershell invocation which hides the window entirely.",
    "CveIDs": [
      "CVE-1999-0504"
    ],
    "References": [
      "https://www.optiv.com/blog/owning-computers-without-shell-access",
      "http://sourceforge.net/projects/smbexec/",
      "http://technet.microsoft.com/en-us/sysinternals/bb897553.aspx"
    ]
  }
]