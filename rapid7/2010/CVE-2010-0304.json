[
  {
    "Name": "wireshark_lwres_getaddrbyname.rb",
    "Title": "Wireshark LWRES Dissector getaddrsbyname_request Buffer Overflow",
    "Description": "The LWRES dissector in Wireshark version 0.9.15 through 1.0.10 and 1.2.0 through 1.2.5 allows remote attackers to execute arbitrary code due to a stack-based buffer overflow. This bug found and reported by babi. This particular exploit targets the dissect_getaddrsbyname_request function. Several other functions also contain potentially exploitable stack-based buffer overflows. The Windows version (of 1.2.5 at least) is compiled with /GS, which prevents exploitation via the return address on the stack. Sending a larger string allows exploitation using the SEH bypass method. However, this packet will usually get fragmented, which may cause additional complications. NOTE: The vulnerable code is reached only when the packet dissection is rendered. If the packet is fragmented, all fragments must be captured and reassembled to exploit this issue.",
    "CveIDs": [
      "CVE-2010-0304"
    ],
    "References": [
      "http://www.securityfocus.com/bid/37985",
      "http://www.wireshark.org/security/wnpa-sec-2010-02.html",
      "http://anonsvn.wireshark.org/viewvc/trunk-1.2/epan/dissectors/packet-lwres.c?view=diff&r1=31596&r2=28492&diff_format=h"
    ]
  },
  {
    "Name": "wireshark_lwres_getaddrbyname_loop.rb",
    "Title": "Wireshark LWRES Dissector getaddrsbyname_request Buffer Overflow (loop)",
    "Description": "The LWRES dissector in Wireshark version 0.9.15 through 1.0.10 and 1.2.0 through 1.2.5 allows remote attackers to execute arbitrary code due to a stack-based buffer overflow. This bug found and reported by babi. This particular exploit targets the dissect_getaddrsbyname_request function. Several other functions also contain potentially exploitable stack-based buffer overflows. The Windows version (of 1.2.5 at least) is compiled with /GS, which prevents exploitation via the return address on the stack. Sending a larger string allows exploitation using the SEH bypass method. However, this packet will usually get fragmented, which may cause additional complications. NOTE: The vulnerable code is reached only when the packet dissection is rendered. If the packet is fragmented, all fragments must be captured and reassembled to exploit this issue. This version loops, sending the packet every X seconds until the job is killed.",
    "CveIDs": [
      "CVE-2010-0304"
    ],
    "References": [
      "http://www.securityfocus.com/bid/37985",
      "http://www.wireshark.org/security/wnpa-sec-2010-02.html",
      "http://anonsvn.wireshark.org/viewvc/trunk-1.2/epan/dissectors/packet-lwres.c?view=diff&r1=31596&r2=28492&diff_format=h"
    ]
  }
]
