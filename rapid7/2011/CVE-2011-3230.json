[
  {
    "Name": "safari_file_policy.rb",
    "Title": "Apple Safari file:// Arbitrary Code Execution",
    "Description": "This module exploits a vulnerability found in Apple Safari on OS X platform. A policy issue in the handling of file:// URLs may allow arbitrary remote code execution under the context of the user. In order to trigger arbitrary remote code execution, the best way seems to be opening a share on the victim machine first (this can be SMB/WebDav/FTP, or a file format that OS X might automount), and then execute it in /Volumes/[share]. If there's some kind of bug that leaks the victim machine's current username, then it's also possible to execute the payload in /Users/[username]/Downloads/, or else bruteforce your way to getting that information. Please note that non-java payloads (*.sh extension) might get launched by Xcode instead of executing it, in that case please try the Java ones instead.",
    "CveIDs": [
      "CVE-2011-3230"
    ],
    "References": [
      "http://vttynotes.blogspot.com/2011/10/cve-2011-3230-launch-any-file-path-from.html#comments",
      "http://support.apple.com/kb/HT5000",
      "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/osx/browser/safari_file_policy.rb"
    ]
  }
]
