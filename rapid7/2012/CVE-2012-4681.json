[
  {
    "Name": "java_jre17_exec.rb",
    "Title": "Java 7 Applet Remote Code Execution",
    "Description": "The exploit takes advantage of two issues in JDK 7: The ClassFinder and MethodFinder.findMethod().  Both were newly introduced in JDK 7.  ClassFinder is a replacement for classForName back in JDK 6. It allows untrusted code to obtain a reference and have access to a restricted package in JDK 7, which can be used to abuse sun.awt.SunToolkit (a restricted package).  With sun.awt.SunToolkit, we can actually invoke getField() by abusing findMethod() in Statement.invokeInternal() (but getField() must be public, and that's not always the case in JDK 6) in order to access Statement.acc's private field, modify AccessControlContext, and then disable Security Manager. Once Security Manager is disabled, we can execute arbitrary Java code. Our exploit has been tested successfully against multiple platforms, including: IE, Firefox, Safari, Chrome; Windows, Ubuntu, OS X, Solaris, etc.",
    "CveIDs": [
      "CVE-2012-4681"
    ],
    "References": [
      "http://blog.fireeye.com/research/2012/08/zero-day-season-is-not-over-yet.html",
      "http://www.deependresearch.org/2012/08/java-7-vulnerability-analysis.html",
      "http://labs.alienvault.com/labs/index.php/2012/new-java-0day-exploited-in-the-wild/",
      "http://www.deependresearch.org/2012/08/java-7-0-day-vulnerability-information.html",
      "http://www.oracle.com/technetwork/topics/security/alert-cve-2012-4681-1835715.html",
      "https://blog.rapid7.com/2012/08/27/lets-start-the-week-with-a-new-java-0day",
      "https://bugzilla.redhat.com/show_bug.cgi?id=852051"
    ]
  }
]
