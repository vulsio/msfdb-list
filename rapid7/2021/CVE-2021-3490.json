[
  {
    "Name": "cve_2021_3490_ebpf_alu32_bounds_check_lpe.rb",
    "Title": "Linux eBPF ALU32 32-bit Invalid Bounds Tracking LPE",
    "Description": "Linux kernels from 5.7-rc1 prior to 5.13-rc4, 5.12.4, 5.11.21, and 5.10.37 are vulnerable to a bug in the eBPF verifier's verification of ALU32 operations in the scalar32_min_max_and function when performing AND operations, whereby under certain conditions the bounds of a 32 bit register would not be properly updated. This can be abused by attackers to conduct an out of bounds read and write in the Linux kernel and therefore achieve arbitrary code execution as the root user. The target system must be compiled with eBPF support and not have kernel.unprivileged_bpf_disabled set, which prevents unprivileged users from loading eBPF programs into the kernel. Note that if kernel.unprivileged_bpf_disabled is enabled this module can still be utilized to bypass protections such as SELinux, however the user must already be logged as a privileged user such as root.",
    "CveIDs": [
      "CVE-2021-3490"
    ],
    "References": [
      "https://www.openwall.com/lists/oss-security/2021/05/11/11",
      "https://github.com/chompie1337/Linux_LPE_eBPF_CVE-2021-3490",
      "https://www.zerodayinitiative.com/blog/2020/4/8/cve-2020-8835-linux-kernel-privilege-escalation-via-improper-ebpf-program-verification",
      "https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git/commit/?id=049c4e13714ecbca567b4d5f6d563f05d431c80e",
      "https://www.graplsecurity.com/post/kernel-pwning-with-ebpf-a-love-story",
      "https://www.zerodayinitiative.com/advisories/ZDI-21-606/",
      "https://ubuntu.com/security/notices/USN-4950-1",
      "https://ubuntu.com/security/notices/USN-4949-1",
      "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/linux/local/cve_2021_3490_ebpf_alu32_bounds_check_lpe.rb"
    ]
  }
]
